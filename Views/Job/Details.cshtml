@using Microsoft.AspNetCore.Identity
@model JobSearch.Models.Job
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>@Html.DisplayFor(model => model.Position)</h1>

<div>
    <hr />
    <dl class="row">
        <div></div>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Position)
        </dt>
        <dd class="col-sm-7">
            @Html.DisplayFor(model => model.Position)
        </dd>
        <dt class="col-sm-3">
            Company Name
        </dt>
        <dd class="col-sm-7">
            @Html.DisplayFor(model => model.Company.CompanyName)
        </dd>
        <dt class="col-sm-3">
            Category
        </dt>
        <dd class="col-sm-7">
            @Html.DisplayFor(model => model.Category.Label)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-7">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Salary)
        </dt>
        <dd class="col-sm-7">
            @Html.DisplayFor(model => model.Salary)
        </dd>
        <dt class="col-sm-3">
            Years of Experience
        </dt>
        <dd class="col-sm-7">
            @Html.DisplayFor(model => model.YearsOfExperience)
        </dd>
        <dt class="col-sm-3">
            Employment Type
        </dt>
        <dd class="col-sm-7">
            @Html.DisplayFor(model => model.EmploymentType.Name)
        </dd>
    </dl>
    @if (UserManager.GetUserAsync(User).Result.IsEmployer == false)
    {
        <form asp-controller="Applicant" asp-action="Create" asp-route-id="@Model.Id">
            <input type="hidden" />
            <input type="submit" value="Apply!" class="btn btn-success"  style="margin-bottom: 15px"/>
        </form>
    }
</div>
@if (UserManager.GetUserAsync(User).Result.IsEmployer == true)
{
    <div class="col-md-6" style="margin-left: -15px">
        <h4>Applicants (@Model.ApplicantJobs.Count())</h4>
        <hr />
        <dl class="row" style="margin-left: 0px">
            @foreach (var item in Model.ApplicantJobs)
            {
                <dd class="col-sm-10">
                    <li>@Html.ActionLink(item.Applicant.ApplicationUser.FirstName + " " + item.Applicant.ApplicationUser.LastName, "Details", "Applicant", new { id = item.Applicant.Id, JobId = Model.Id }, new { area = "" })</li>
                </dd>
                @if (item.IsAccepted == false && item.IsDeclined == false)
                {
                    <dd style="color: gray">
                        Pending
                    </dd>
                }
                @if (item.IsAccepted == true)
                {
                    <dd style="color: green">
                        Accepted
                    </dd>
                }
                @if (item.IsDeclined == true)
                {
                    <dd style="color: red">
                        Declined
                    </dd>
                }
            }
        </dl>
    </div>
}
    <div>
        @if (UserManager.GetUserAsync(User).Result.IsEmployer == true)
        {
            <div>
                @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-secondary btn-sm text-dark" }) |
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-secondary btn-sm text-dark" }) |
                <a asp-controller="Employer" asp-action="Index" class="btn btn-secondary btn-sm text-dark">Back to List</a>
            </div>
        }
        @if (UserManager.GetUserAsync(User).Result.IsEmployer == false)
        {
            <a asp-controller="Applicant" asp-action="Index" class="btn btn-secondary btn-sm text-dark">Back to List</a>
        }
    </div>
